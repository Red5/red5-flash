<?xml version="1.0"?>
<!--
RED5 Open Source Flash Server - http://www.osflash.org/red5

Copyright (c) 2006-2009 by respective authors (see below). All rights reserved.

This library is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 2.1 of the License, or (at your option) any later
version.

This library is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with this library; if not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->
<view:Main xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:view="org.red5.samples.echo.view.*"
		   status="{model.fpVersion}" 
		   title="Echo {model.appVersion}">
  
	<mx:Form paddingBottom="0" paddingTop="0" paddingRight="0" paddingLeft="0" height="100%">
		<view:CredentialsView username="{model.user.userid}" width="100%"
							  password="{model.user.password}"
							  enabled="{!model.connecting}"/>
		

		<view:ServiceConfigView id="http" label="HTTP:" width="100%"
								methodName="{model.httpMethod}" defaultHost="http://localhost:5080/echo/gateway"
								hostName="{model.httpServer}" fontWeight="bold"
								enabled="{!model.connecting}" hostUpdate="onHostUpdate(event)"/>
								
		<view:ServiceConfigView id="rtmp" label="RTMP:" hostName="{model.rtmpServer}"
								defaultHost="rtmp://localhost/echo" fontWeight="bold"
								methodName="{model.rtmpMethod}" width="100%"
								enabled="{!model.connecting}" hostUpdate="onHostUpdate(event)"/>
		
		<view:TestSelectionView id="amf0" label="AMF0:" width="100%" dataProvider="{model.amf0_tests}"
								onInit="onSetupTests(event)" onSelect="onUpdateTests(event)"
								enabled="{!model.connecting}"/>
								
		<view:TestSelectionView id="amf3" label="AMF3:" width="100%" dataProvider="{model.amf3_tests}"
								onInit="onSetupTests(event)" onSelect="onUpdateTests(event)"
								enabled="{!model.connecting}"/>

		<mx:Spacer height="5" />
		<mx:HRule width="100%"/>
		
		<mx:VDividedBox width="100%" height="100%">
			<mx:TextArea id="resultText" htmlText="{model.statusText}" width="100%" height="100" 
					 	 editable="false" textIndent="5"/>

			<mx:DataGrid id="resultGrid" width="100%" height="100%" styleName="mainGrid"
						 dataProvider="{model.testResults}" verticalScrollPolicy="on"
						 updateComplete="{resultGrid.verticalScrollPosition = resultGrid.maxVerticalScrollPosition}"
						 variableRowHeight="true" liveScrolling="true">
				<mx:columns>
					<mx:DataGridColumn dataField="id" headerText="" width="30"/>
					<mx:DataGridColumn dataField="status" headerText="Status" width="85">
						<mx:itemRenderer>
	                        <mx:Component>
	                            <mx:HBox width="100%" verticalAlign="middle"
	                            		 horizontalScrollPolicy="off" verticalScrollPolicy="off"
	                            		 horizontalGap="0">
                                    <mx:Button id="img" styleName="testInitIcon"/>
                                    <mx:Text id="status" text="{data.status}" valueCommit="update(event)" selectable="false"/>
	                             	<mx:Script>
			                          <![CDATA[
			                          	import org.red5.samples.echo.events.EchoTestEvent;
			                          	import mx.events.FlexEvent;
			                            
			                            private function update(event:FlexEvent):void
			                            {
			                            	switch (event.target.text)
			                            	{
			                            		case EchoTestEvent.TEST_ACTIVE:
			                            			img.styleName = 'testActiveIcon';
			                            			//status.text = "Active";
			                            			break;
			                            		case EchoTestEvent.TEST_INIT:
			                            			img.styleName = 'testInitIcon';
			                            			//status.text = "Initialize";
			                            			break;
			                            		case EchoTestEvent.TEST_COMPLETE:
			                            			img.styleName = 'testSuccessIcon';
			                            			//status.text = "Success";
			                            			break;
			                            		case EchoTestEvent.TEST_TIMEOUT:
			                            			img.styleName = 'testTimeoutIcon';
			                            			//status.text = "Timeout";
			                            			break;
			                            	}
			                            }
			                          ]]>
		                         	</mx:Script>
	                            </mx:HBox>
	                        </mx:Component>
	                    </mx:itemRenderer>
	                </mx:DataGridColumn>
					<mx:DataGridColumn dataField="type" headerText="Type" width="220"/>
					<mx:DataGridColumn dataField="speed" headerText="Speed" width="50"/>
					<mx:DataGridColumn dataField="request" headerText="Request" width="280"/>
					<mx:DataGridColumn dataField="response" headerText="Response" width="280"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VDividedBox>

	</mx:Form>

	<mx:ControlBar enabled="{!model.connecting}">
		<mx:HBox width="100%">
			<mx:Button id="btnConnectRTMP0" label="RTMP AMF0"
					   labelPlacement="left" click="onConnect('rtmp', ObjectEncoding.AMF0)"/>
			<mx:Button id="btnConnectRTMP3" label="RTMP AMF3"
					   labelPlacement="left" click="onConnect('rtmp', ObjectEncoding.AMF3)"/>
			<mx:Button id="btnConnectHTTP0" label="HTTP AMF0"
					   labelPlacement="left" click="onConnect('http', ObjectEncoding.AMF0)"/>
			<mx:Button id="btnConnectHTTP3" label="HTTP AMF3"
					   labelPlacement="left" click="onConnect('http', ObjectEncoding.AMF3)"/>
			<mx:Button id="btnConnectRemoteObject" label="HTTP RemoteObject" 
					   labelPlacement="left" click="onConnect('remoteObject', ObjectEncoding.AMF3)"/>
			<mx:Button id="btnConnectSharedObject0" label="AMF0 SharedObject" 
					   labelPlacement="left" click="onConnect('sharedObject', ObjectEncoding.AMF0)"/>
			<mx:Button id="btnConnectSharedObject3" label="AMF3 SharedObject" 
					   labelPlacement="left" click="onConnect('sharedObject', ObjectEncoding.AMF3)"/>
		</mx:HBox>
	</mx:ControlBar>
	
</view:Main>